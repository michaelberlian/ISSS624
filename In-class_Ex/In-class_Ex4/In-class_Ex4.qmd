---
title: "In-Class Exercise 4"
date: "9 December 2023"
date-modified: "last-modified"
---

# Spatial Interaction

## Getting Started

```{r}
pacman::p_load(tidyverse, sf, httr, tmap)
```

httr is for API calling

## Geocoding using onemap API

converting postcodes of school to geom

```{r}
#| eval: false
url <- "https://www.onemap.gov.sg/api/common/elastic/search"

csv <- read_csv('data/aspatial/Generalinformationofschools.csv')
postcodes <- csv$postal_code

found <- data.frame()
not_found <- data.frame()

for(postcode in postcodes){
  query <- list('searchVal'=postcode, 'returnGeom'='Y','getAddrDetails'='Y','pageNum'='1')
  res <- GET(url,query=query)
  
  if((content(res)$found) != 0){
    found <- rbind(found,data.frame(content(res))[4:13])
  } else {
    not_found <- data.frame(postcode)
  }
}
```

## Data formatting

```{r}
#| eval: false
merged <- merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)
write.csv(merged, file = 'data/aspatial/schools.csv')
write.csv(not_found, file = 'data/aspatial/not_found.csv')
```

```{r}
schools <- read_csv(file = 'data/aspatial/schools.csv')
schools <- schools %>%
  rename(latitude = results.LATITUDE, 
         longitude = results.LONGITUDE) %>%
  select(postal_code, school_name, latitude, longitude)
```

```{r}
schools_sf <- st_as_sf(schools, 
                       coords = c('longitude','latitude'), 
                       crs=4326) %>%
  st_transform(crs = 3414)
```

wgs84 = 4326

svy21 = 3414

```{r}
tmap_mode("view")

tm_shape(schools_sf) +
  tm_dots() +
tm_view(set.zoom.limits = c(11,14))

tmap_mode("plot")
```

## Preparing

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                 layer = "MP14_SUBZONE_WEB_PL") %>%
  st_transform(crs = 3414)
```

```{r}
mpsz$SCHOOL_COUNT <- lengths (
  st_intersects(
    mpsz,schools_sf))
```

```{r}
summary(mpsz$SCHOOL_COUNT)
```

```{r}
tm_shape(mpsz) +
  tm_polygons() +
tm_shape(schools_sf) +
  tm_dots()
```

```{r}
business <- st_read(dsn = 'data/geospatial',
                    layer = 'Business') %>%
  st_transform(crs=3414)
```

```{r}
tmap_options(check.and.fix = TRUE)
tm_shape(mpsz)+
  tm_polygons()+
tm_shape(business)+
  tm_dots()+
tm_view(set.zoom.limits = c(11,14))

tmap_mode("plot")
```

```{r}
mpsz$BUSINESS_COUNT <- lengths (
  st_intersects(
    mpsz,business))
```

```{r}
summary(mpsz$BUSINESS_COUNT)
```

# Model Calibration

## Getting Started

```{r}
pacman::p_load(tmap, sf, performance, AER, MASS, ggpubr, tidyverse)
```

```{r}
flow_data <- read_rds('data/rds/flow_data_tidy.rds')
```

```{r}
glimpse(flow_data)
```

```{r}
flow_data$FlowNoIntra <- ifelse(
  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,
  0, flow_data$MORNING_PEAK
)

flow_data$offset <- ifelse(
  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ,
  0.000001,1
)

inter_zonal_flow <- flow_data %>%
  filter(FlowNoIntra > 0)

inter_zonal_flow <- inter_zonal_flow %>%
  rename(TRIPS = MORNING_PEAK,
         DIST = dist)
```

## The Data

### origin (prod) constraint SIM

```{r}
orcSIM_poisson <- glm(formula = TRIPS ~
                        ORIGIN_SZ +
                        log(SCHOOL_COUNT)+
                        log(RETAIL_COUNT)+
                        log(DIST) - 1,
                      family = poisson(link = "log"),
                      data = inter_zonal_flow,
                      na.action = na.exclude)
summary(orcSIM_poisson)
```

### goodness of fit

```{r}
CalcRSquared <- function(observed, estimated){
  r <- cor(observed, estimated)
  R2 <- r^2
  R2
}
```

```{r}
CalcRSquared(orcSIM_poisson$data$TRIPS,orcSIM_poisson$fitted.values)
```

```{r}
performance_rmse(orcSIM_poisson, normalized = FALSE)
```

### doubly constrained

```{r}
dbcSIM_poisson <- glm(formula = TRIPS ~
                        ORIGIN_SZ +
                        DESTIN_SZ +
                        log(DIST),
                      family = poisson(link = "log"),
                      data = inter_zonal_flow,
                      na.action = na.exclude)
summary(dbcSIM_poisson)
```

```{r}
performance_rmse(dbcSIM_poisson)
```
