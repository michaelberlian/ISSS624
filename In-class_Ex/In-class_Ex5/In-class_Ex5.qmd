---
title: "In-Class Exercise 5:Spatial Econometric"
date: "16 December 2023"
date-modified: "last-modified"
---

```{r}
#| eval: false
devtools::install_github("LukeCe/spflow", force = TRUE)
```

## Getting Started

```{r}
pacman::p_load(tmap, sf, spdep, psp, Matrix, spflow, reshape2, knitr, tidyverse)
```

## Data Preparation

```{r}
mpsz <- st_read(dsn = 'data/geospatial',
                layer = 'MPSZ-2019') %>%
  st_transform(crs = 3414)
```

```{r}
busstop <- st_read(dsn = 'data/geospatial',
                layer = 'BusStop') %>%
  st_transform(crs = 3414)
```

calculating bus stop in a subzone and filtering subzone without any bus stop

```{r}
#| eval: false
mpsz$`BUSSTOP_COUNT` <- lengths(
  st_intersects(mpsz,busstop)
)
```

```{r}
#| eval: false
mpsz_busstop <- mpsz %>%
  filter(BUSSTOP_COUNT >= 1)
```

```{r}
#| eval: false
centroids <- suppressWarnings({
  st_point_on_surface(st_geometry(mpsz_busstop))
})
```

listing the neighbor and its weight using different methods

```{r}
#| eval: false
mpsz_nb <- list(
  'by_contiguity' = poly2nb(mpsz_busstop),
  'by_distance' = dnearneigh(centroids,
                             d1 = 0, d2 = 5000),
  'by_knn' = knn2nb(knearneigh(centroids,3))
)
```

```{r}
#| eval: false
write_rds(mpsz_nb, "data/rds/mpsz_nb.rds")
```

```{r}
mpsz_nb <- read_rds('data/rds/mpsz_nb.rds')
```

```{r}
odbus6_9 <- read_rds('data/rds/odbus6_9.rds')
```

```{r}
busstop_mpsz <- st_intersection(busstop,mpsz) %>%
  select(BUS_STOP_N, SUBZONE_C) %>%
  st_drop_geometry()
```

```{r}
od_data <- left_join(odbus6_9 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         ORIGIN_SZ = SUBZONE_C,
         DESTIN_BS = DESTINATION_PT_CODE)
```

```{r}
duplicate <- od_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

```{r}
od_data <- unique(od_data)
```

```{r}
od_data <- left_join(od_data , busstop_mpsz,
            by = c("DESTIN_BS" = "BUS_STOP_N")) 
```

```{r}
duplicate <- od_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

```{r}
od_data <- unique(od_data)
```

```{r}
od_data <- od_data %>%
  drop_na() %>%
  group_by(ORIGIN_BS, DESTIN_BS) %>%
  summarise(TRIPS = sum(TRIPS))
```

```{r}
od_data <- read_rds('data/rds/od_data.rds')
flow_data <- read_rds('data/rds/flow_data.rds')
```

# In-class

## Importing MPSZ data

```{r}
mpsz_nb <- read_rds('data/rds/mpsz_nb.rds')
mpsz_flow <- read_rds('data/rds/mpsz_flow.rds')
mpsz_var <- read_rds('data/rds/mpsz_var.rds')
```

## Spflow network class

```{r}
mpsz_net <- spflow_network(
  id_net = 'sg',
  node_neighborhood = 
    nb2mat(mpsz_nb$by_contiguity),
    node_data = mpsz_var,
    node_key_column = 'SZ_CODE'
)

mpsz_net
```

## Spflow network pair

```{r}
mpsz_net_pairs <- spflow_network_pair(
  id_orig_net = 'sg',
  id_dest_net = 'sg',
  pair_data = mpsz_flow,
  orig_key_column = 'ORIGIN_SZ',
  dest_key_column = 'DESTIN_SZ'
)

mpsz_net_pairs
```

```{r}
mpsz_multi_net <- spflow_network_multi(mpsz_net, mpsz_net_pairs)

mpsz_multi_net
```

## Multi-Collinearity Check

```{r}
cor_formula <- log(1 + TRIPS) ~
  BUSSTOP_COUNT +
  AGE7_12 +
  AGE13_24 +
  AGE25_64 +
  SCHOOL_COUNT + 
  BUSINESS_COUNT +
  RETAILS_COUNT +
  FINSERV_COUNT +
  P_(log(DISTANCE + 1))

cor_mat <- pair_cor(
  mpsz_multi_net,
  spflow_formula = cor_formula,
  add_lags_x = FALSE)

colnames(cor_mat) <- paste0(
  substr(
    colnames(cor_mat),1,3
  ), "..."
)

cor_image(cor_mat)
```

## Model Calibration

```{r}
base_model <- spflow(
  spflow_formula = log(1+TRIPS) ~
    O_(BUSSTOP_COUNT +
         AGE25_64) +
    D_(SCHOOL_COUNT +
         BUSINESS_COUNT +
         RETAILS_COUNT +
         FINSERV_COUNT) +
    P_(log(DISTANCE + 1)),
  spflow_networks = mpsz_multi_net
)
base_model
```

```{r}
old_par <- par(mfrow = c(1,3),
               mar = c(2,2,2,2))
spflow_moran_plots(base_model)
```

```{r}
corr_residual <- pair_cor(base_model)
colnames(corr_residual) <- substr(colnames(corr_residual),1,3)
cor_image(corr_residual)
```

model control

```{r}
spflow_formula <- log(1 + TRIPS) ~
  O_(BUSSTOP_COUNT +
       AGE25_64) +
  D_(SCHOOL_COUNT + 
       BUSINESS_COUNT +
       RETAILS_COUNT +
       FINSERV_COUNT) + 
  P_(log(DISTANCE + 1))

model_control <- spflow_control(
  estimation_method = 'mle',
  model = "model_8"
)

mle_model8 <- spflow(
  spflow_formula,
  spflow_networks = mpsz_multi_net,
  estimation_control = model_control
)

mle_model8
```

```{r}
old_par <- par(mfrow = c(1,3),
               mar = c(2,2,2,2))
spflow_moran_plots(mle_model8)
par(old_par)
```
